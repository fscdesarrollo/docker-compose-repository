version: '3'
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:6.1.1
    restart: always
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:6.1.1
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://host.docker.internal:9092
      # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://host.docker.internal:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # kafka-connect:
  #   image: confluentinc/cp-kafka-connect:6.1.1
  #   restart: always
  #   depends_on:
  #     - kafka
  #   ports:
  #     - "8083:8083"
  #   volumes:
  #     - ./plugins:/usr/share/java/kafka/debezium
  #   environment:
  #     #CONNECT_BOOTSTRAP_SERVERS: kafka:9092
  #     CONNECT_BOOTSTRAP_SERVERS: host.docker.internal:9092
  #     CONNECT_REST_ADVERTISED_HOST_NAME: localhost
  #     CONNECT_REST_PORT: 8083
  #     CONNECT_GROUP_ID: kafka-connect
  #     CONNECT_CONFIG_STORAGE_TOPIC: kafka-connect-configs
  #     CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
  #     CONNECT_OFFSET_STORAGE_TOPIC: kafka-connect-offsets
  #     CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
  #     CONNECT_STATUS_STORAGE_TOPIC: kafka-connect-status
  #     CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
  #     CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
  #     CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
  #     CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
  #     CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
  #     CONNECT_PLUGIN_PATH: /usr/share/java/kafka
  #     CONNECT_SSL_ENABLED: true

  #     # CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: false
  #     # CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: false

    
  # control-center:
  #   image: confluentinc/cp-enterprise-control-center:6.1.1
  #   restart: always
  #   depends_on:
  #     - kafka
  #     - kafka-connect
  #   ports:
  #     - "9021:9021"
  #   environment:
  #     #CONTROL_CENTER_BOOTSTRAP_SERVERS: kafka:9092
  #     CONTROL_CENTER_BOOTSTRAP_SERVERS: host.docker.internal:9092
  #     CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: http://kafka-connect:8083
  #     CONTROL_CENTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
  #     CONTROL_CENTER_REPLICATION_FACTOR: 1
  #     CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
  #     CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
  #     CONTROL_CENTER_COMMAND_TOPIC_PARTITIONS: 1
  #     CONTROL_CENTER_METRICS_TOPIC_PARTITIONS: 1
  #     CONTROL_CENTER_SCHEMA_REGISTRY_INSTANCE: schema-registry
  #     CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: http://ksqldb-server:8088
  #     #CONTROL_CENTER_KSQL_KSQLDB1_BOOTSTRAP_SERVERS: kafka:9092
  #     CONTROL_CENTER_KSQL_KSQLDB1_BOOTSTRAP_SERVERS: host.docker.internal:9092
  #     CONTROL_CENTER_KSQL_KSQLDB1_LISTENERS: http://0.0.0.0:8088
  #     CONTROL_CENTER_KSQL_KSQLDB1_METRICS_ENABLED: 'true'
  #     CONTROL_CENTER_KSQL_KSQLDB1_METRICS_REPORTER_TOPIC_REPLICATION_FACTOR: 1
  #     CONTROL_CENTER_KSQL_KSQLDB1_METRICS_REPORTER_TOPIC_PARTITIONS: 1
  #     CONTROL_CENTER_KSQL_KSQLDB1_METRICS_REPORTER_TOPIC_NAME: _confl

  # sqlserver:
  #   image: mcr.microsoft.com/mssql/server:2022-latest
  #   container_name: sqlserver
  #   hostname: sqlserver
  #   environment:
  #     - ACCEPT_EULA=Y
  #     - MSSQL_SA_PASSWORD=Admin789
  #     - MSSQL_AGENT_ENABLED=true
  #     - MSSQL_PID=Standard
  #   ports:
  #     - "1433:1433"
  #   restart: always